digraph AST {
  node [shape=box];
  node1 [label="program"];
  node2 [label="declarations"];
  node1 -> node2;
  node3 [label="declarations"];
  node4 [label="declaration"];
  node3 -> node4;
  node5 [label="declaration"];
  node6 [label="variableDeclaration"];
  node5 -> node6;
  node7 [label="variableDeclaration"];
  node8 [label="text"];
  node7 -> node8;
  node9 [label="texto"];
  node7 -> node9;
  node10 [label="="];
  node7 -> node10;
  node11 [label="expression"];
  node7 -> node11;
  node12 [label="expression"];
  node13 [label="\"txt\""];
  node12 -> node13;
  node14 [label=";"];
  node7 -> node14;
  node15 [label="declaration"];
  node3 -> node15;
  node16 [label="declaration"];
  node17 [label="variableDeclaration"];
  node16 -> node17;
  node18 [label="variableDeclaration"];
  node19 [label="integer"];
  node18 -> node19;
  node20 [label="z"];
  node18 -> node20;
  node21 [label="="];
  node18 -> node21;
  node22 [label="expression"];
  node18 -> node22;
  node23 [label="expression"];
  node24 [label="arithmeticExpression"];
  node23 -> node24;
  node25 [label="arithmeticExpression"];
  node26 [label="term"];
  node25 -> node26;
  node27 [label="term"];
  node28 [label="factor"];
  node27 -> node28;
  node29 [label="factor"];
  node30 [label="123"];
  node29 -> node30;
  node31 [label=";"];
  node18 -> node31;
  node32 [label="<EOF>"];
  node1 -> node32;
}
