digraph AST {
  node [shape=box];
  node1 [label="program"];
  node2 [label="declarations"];
  node1 -> node2;
  node3 [label="declarations"];
  node4 [label="declaration"];
  node3 -> node4;
  node5 [label="declaration"];
  node6 [label="variableDeclaration"];
  node5 -> node6;
  node7 [label="variableDeclaration"];
  node8 [label="integer"];
  node7 -> node8;
  node9 [label="n"];
  node7 -> node9;
  node10 [label="="];
  node7 -> node10;
  node11 [label="expression"];
  node7 -> node11;
  node12 [label="expression"];
  node13 [label="arithmeticExpression"];
  node12 -> node13;
  node14 [label="arithmeticExpression"];
  node15 [label="term"];
  node14 -> node15;
  node16 [label="term"];
  node17 [label="factor"];
  node16 -> node17;
  node18 [label="factor"];
  node19 [label="0"];
  node18 -> node19;
  node20 [label=";"];
  node7 -> node20;
  node21 [label="declaration"];
  node3 -> node21;
  node22 [label="declaration"];
  node23 [label="command"];
  node22 -> node23;
  node24 [label="command"];
  node25 [label="outputCommand"];
  node24 -> node25;
  node26 [label="outputCommand"];
  node27 [label="put"];
  node26 -> node27;
  node28 [label="("];
  node26 -> node28;
  node29 [label="expression"];
  node26 -> node29;
  node30 [label="expression"];
  node31 [label="\"Digite o número de linhas: \""];
  node30 -> node31;
  node32 [label=")"];
  node26 -> node32;
  node33 [label=";"];
  node26 -> node33;
  node34 [label="declaration"];
  node3 -> node34;
  node35 [label="declaration"];
  node36 [label="command"];
  node35 -> node36;
  node37 [label="command"];
  node38 [label="inputCommand"];
  node37 -> node38;
  node39 [label="inputCommand"];
  node40 [label="get"];
  node39 -> node40;
  node41 [label="("];
  node39 -> node41;
  node42 [label="n"];
  node39 -> node42;
  node43 [label=")"];
  node39 -> node43;
  node44 [label=";"];
  node39 -> node44;
  node45 [label="declaration"];
  node3 -> node45;
  node46 [label="declaration"];
  node47 [label="command"];
  node46 -> node47;
  node48 [label="command"];
  node49 [label="ifCommand"];
  node48 -> node49;
  node50 [label="ifCommand"];
  node51 [label="if"];
  node50 -> node51;
  node52 [label="expression"];
  node50 -> node52;
  node53 [label="expression"];
  node54 [label="logicalExpression"];
  node53 -> node54;
  node55 [label="logicalExpression"];
  node56 [label="logicalTerm"];
  node55 -> node56;
  node57 [label="logicalTerm"];
  node58 [label="logicalFactor"];
  node57 -> node58;
  node59 [label="logicalFactor"];
  node60 [label="comparison"];
  node59 -> node60;
  node61 [label="comparison"];
  node62 [label="arithmeticExpression"];
  node61 -> node62;
  node63 [label="arithmeticExpression"];
  node64 [label="term"];
  node63 -> node64;
  node65 [label="term"];
  node66 [label="factor"];
  node65 -> node66;
  node67 [label="factor"];
  node68 [label="n"];
  node67 -> node68;
  node69 [label="comparisonOperator"];
  node61 -> node69;
  node70 [label="comparisonOperator"];
  node71 [label="<="];
  node70 -> node71;
  node72 [label="arithmeticExpression"];
  node61 -> node72;
  node73 [label="arithmeticExpression"];
  node74 [label="term"];
  node73 -> node74;
  node75 [label="term"];
  node76 [label="factor"];
  node75 -> node76;
  node77 [label="factor"];
  node78 [label="0"];
  node77 -> node78;
  node79 [label="then"];
  node50 -> node79;
  node80 [label="block"];
  node50 -> node80;
  node81 [label="block"];
  node82 [label="{"];
  node81 -> node82;
  node83 [label="declarations"];
  node81 -> node83;
  node84 [label="declarations"];
  node85 [label="declaration"];
  node84 -> node85;
  node86 [label="declaration"];
  node87 [label="command"];
  node86 -> node87;
  node88 [label="command"];
  node89 [label="outputCommand"];
  node88 -> node89;
  node90 [label="outputCommand"];
  node91 [label="put"];
  node90 -> node91;
  node92 [label="("];
  node90 -> node92;
  node93 [label="expression"];
  node90 -> node93;
  node94 [label="expression"];
  node95 [label="\"Erro: número deve ser maior que zero!\""];
  node94 -> node95;
  node96 [label=")"];
  node90 -> node96;
  node97 [label=";"];
  node90 -> node97;
  node98 [label="}"];
  node81 -> node98;
  node99 [label="else"];
  node50 -> node99;
  node100 [label="block"];
  node50 -> node100;
  node101 [label="block"];
  node102 [label="{"];
  node101 -> node102;
  node103 [label="declarations"];
  node101 -> node103;
  node104 [label="declarations"];
  node105 [label="declaration"];
  node104 -> node105;
  node106 [label="declaration"];
  node107 [label="variableDeclaration"];
  node106 -> node107;
  node108 [label="variableDeclaration"];
  node109 [label="integer"];
  node108 -> node109;
  node110 [label="linha"];
  node108 -> node110;
  node111 [label="="];
  node108 -> node111;
  node112 [label="expression"];
  node108 -> node112;
  node113 [label="expression"];
  node114 [label="arithmeticExpression"];
  node113 -> node114;
  node115 [label="arithmeticExpression"];
  node116 [label="term"];
  node115 -> node116;
  node117 [label="term"];
  node118 [label="factor"];
  node117 -> node118;
  node119 [label="factor"];
  node120 [label="1"];
  node119 -> node120;
  node121 [label=";"];
  node108 -> node121;
  node122 [label="declaration"];
  node104 -> node122;
  node123 [label="declaration"];
  node124 [label="command"];
  node123 -> node124;
  node125 [label="command"];
  node126 [label="whileCommand"];
  node125 -> node126;
  node127 [label="whileCommand"];
  node128 [label="while"];
  node127 -> node128;
  node129 [label="expression"];
  node127 -> node129;
  node130 [label="expression"];
  node131 [label="logicalExpression"];
  node130 -> node131;
  node132 [label="logicalExpression"];
  node133 [label="logicalTerm"];
  node132 -> node133;
  node134 [label="logicalTerm"];
  node135 [label="logicalFactor"];
  node134 -> node135;
  node136 [label="logicalFactor"];
  node137 [label="comparison"];
  node136 -> node137;
  node138 [label="comparison"];
  node139 [label="arithmeticExpression"];
  node138 -> node139;
  node140 [label="arithmeticExpression"];
  node141 [label="term"];
  node140 -> node141;
  node142 [label="term"];
  node143 [label="factor"];
  node142 -> node143;
  node144 [label="factor"];
  node145 [label="linha"];
  node144 -> node145;
  node146 [label="comparisonOperator"];
  node138 -> node146;
  node147 [label="comparisonOperator"];
  node148 [label="<="];
  node147 -> node148;
  node149 [label="arithmeticExpression"];
  node138 -> node149;
  node150 [label="arithmeticExpression"];
  node151 [label="term"];
  node150 -> node151;
  node152 [label="term"];
  node153 [label="factor"];
  node152 -> node153;
  node154 [label="factor"];
  node155 [label="n"];
  node154 -> node155;
  node156 [label="do"];
  node127 -> node156;
  node157 [label="block"];
  node127 -> node157;
  node158 [label="block"];
  node159 [label="{"];
  node158 -> node159;
  node160 [label="declarations"];
  node158 -> node160;
  node161 [label="declarations"];
  node162 [label="declaration"];
  node161 -> node162;
  node163 [label="declaration"];
  node164 [label="variableDeclaration"];
  node163 -> node164;
  node165 [label="variableDeclaration"];
  node166 [label="integer"];
  node165 -> node166;
  node167 [label="coluna"];
  node165 -> node167;
  node168 [label="="];
  node165 -> node168;
  node169 [label="expression"];
  node165 -> node169;
  node170 [label="expression"];
  node171 [label="arithmeticExpression"];
  node170 -> node171;
  node172 [label="arithmeticExpression"];
  node173 [label="term"];
  node172 -> node173;
  node174 [label="term"];
  node175 [label="factor"];
  node174 -> node175;
  node176 [label="factor"];
  node177 [label="1"];
  node176 -> node177;
  node178 [label=";"];
  node165 -> node178;
  node179 [label="declaration"];
  node161 -> node179;
  node180 [label="declaration"];
  node181 [label="command"];
  node180 -> node181;
  node182 [label="command"];
  node183 [label="whileCommand"];
  node182 -> node183;
  node184 [label="whileCommand"];
  node185 [label="while"];
  node184 -> node185;
  node186 [label="expression"];
  node184 -> node186;
  node187 [label="expression"];
  node188 [label="logicalExpression"];
  node187 -> node188;
  node189 [label="logicalExpression"];
  node190 [label="logicalTerm"];
  node189 -> node190;
  node191 [label="logicalTerm"];
  node192 [label="logicalFactor"];
  node191 -> node192;
  node193 [label="logicalFactor"];
  node194 [label="comparison"];
  node193 -> node194;
  node195 [label="comparison"];
  node196 [label="arithmeticExpression"];
  node195 -> node196;
  node197 [label="arithmeticExpression"];
  node198 [label="term"];
  node197 -> node198;
  node199 [label="term"];
  node200 [label="factor"];
  node199 -> node200;
  node201 [label="factor"];
  node202 [label="coluna"];
  node201 -> node202;
  node203 [label="comparisonOperator"];
  node195 -> node203;
  node204 [label="comparisonOperator"];
  node205 [label="<="];
  node204 -> node205;
  node206 [label="arithmeticExpression"];
  node195 -> node206;
  node207 [label="arithmeticExpression"];
  node208 [label="term"];
  node207 -> node208;
  node209 [label="term"];
  node210 [label="factor"];
  node209 -> node210;
  node211 [label="factor"];
  node212 [label="linha"];
  node211 -> node212;
  node213 [label="do"];
  node184 -> node213;
  node214 [label="block"];
  node184 -> node214;
  node215 [label="block"];
  node216 [label="{"];
  node215 -> node216;
  node217 [label="declarations"];
  node215 -> node217;
  node218 [label="declarations"];
  node219 [label="declaration"];
  node218 -> node219;
  node220 [label="declaration"];
  node221 [label="command"];
  node220 -> node221;
  node222 [label="command"];
  node223 [label="outputCommand"];
  node222 -> node223;
  node224 [label="outputCommand"];
  node225 [label="put"];
  node224 -> node225;
  node226 [label="("];
  node224 -> node226;
  node227 [label="expression"];
  node224 -> node227;
  node228 [label="expression"];
  node229 [label="\"*\""];
  node228 -> node229;
  node230 [label=")"];
  node224 -> node230;
  node231 [label=";"];
  node224 -> node231;
  node232 [label="declaration"];
  node218 -> node232;
  node233 [label="declaration"];
  node234 [label="command"];
  node233 -> node234;
  node235 [label="command"];
  node236 [label="assignment"];
  node235 -> node236;
  node237 [label="assignment"];
  node238 [label="coluna"];
  node237 -> node238;
  node239 [label="="];
  node237 -> node239;
  node240 [label="expression"];
  node237 -> node240;
  node241 [label="expression"];
  node242 [label="arithmeticExpression"];
  node241 -> node242;
  node243 [label="arithmeticExpression"];
  node244 [label="term"];
  node243 -> node244;
  node245 [label="term"];
  node246 [label="factor"];
  node245 -> node246;
  node247 [label="factor"];
  node248 [label="coluna"];
  node247 -> node248;
  node249 [label="arithmeticOperator"];
  node243 -> node249;
  node250 [label="arithmeticOperator"];
  node251 [label="+"];
  node250 -> node251;
  node252 [label="term"];
  node243 -> node252;
  node253 [label="term"];
  node254 [label="factor"];
  node253 -> node254;
  node255 [label="factor"];
  node256 [label="1"];
  node255 -> node256;
  node257 [label=";"];
  node237 -> node257;
  node258 [label="}"];
  node215 -> node258;
  node259 [label="declaration"];
  node161 -> node259;
  node260 [label="declaration"];
  node261 [label="command"];
  node260 -> node261;
  node262 [label="command"];
  node263 [label="outputCommand"];
  node262 -> node263;
  node264 [label="outputCommand"];
  node265 [label="put"];
  node264 -> node265;
  node266 [label="("];
  node264 -> node266;
  node267 [label="expression"];
  node264 -> node267;
  node268 [label="expression"];
  node269 [label="\"\n\""];
  node268 -> node269;
  node270 [label=")"];
  node264 -> node270;
  node271 [label=";"];
  node264 -> node271;
  node272 [label="declaration"];
  node161 -> node272;
  node273 [label="declaration"];
  node274 [label="command"];
  node273 -> node274;
  node275 [label="command"];
  node276 [label="assignment"];
  node275 -> node276;
  node277 [label="assignment"];
  node278 [label="linha"];
  node277 -> node278;
  node279 [label="="];
  node277 -> node279;
  node280 [label="expression"];
  node277 -> node280;
  node281 [label="expression"];
  node282 [label="arithmeticExpression"];
  node281 -> node282;
  node283 [label="arithmeticExpression"];
  node284 [label="term"];
  node283 -> node284;
  node285 [label="term"];
  node286 [label="factor"];
  node285 -> node286;
  node287 [label="factor"];
  node288 [label="linha"];
  node287 -> node288;
  node289 [label="arithmeticOperator"];
  node283 -> node289;
  node290 [label="arithmeticOperator"];
  node291 [label="+"];
  node290 -> node291;
  node292 [label="term"];
  node283 -> node292;
  node293 [label="term"];
  node294 [label="factor"];
  node293 -> node294;
  node295 [label="factor"];
  node296 [label="1"];
  node295 -> node296;
  node297 [label=";"];
  node277 -> node297;
  node298 [label="}"];
  node158 -> node298;
  node299 [label="}"];
  node101 -> node299;
  node300 [label="<EOF>"];
  node1 -> node300;
}
